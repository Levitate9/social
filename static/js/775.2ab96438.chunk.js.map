{"version":3,"file":"static/js/775.2ab96438.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/Profile.module.css?b512","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Profile_content__udT8+\",\"blockHeader\":\"Profile_blockHeader__GY02w\"};","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"ProfileInfo_description__64BnQ\",\"imageArea\":\"ProfileInfo_imageArea__0DlDY\",\"profileDataArea\":\"ProfileInfo_profileDataArea__r75ta\",\"mainPhoto\":\"ProfileInfo_mainPhoto__hFt75\",\"upload_image\":\"ProfileInfo_upload_image__tRZa3\",\"select_photo\":\"ProfileInfo_select_photo__iP3JS\",\"fullName\":\"ProfileInfo_fullName__Odyo-\",\"fullNameForm\":\"ProfileInfo_fullNameForm__UVyYW\",\"status\":\"ProfileInfo_status__wpLxq\",\"lookingForAJob\":\"ProfileInfo_lookingForAJob__1Qbp0\",\"lookingForAJobForm\":\"ProfileInfo_lookingForAJobForm__3NFch\",\"aboutMe\":\"ProfileInfo_aboutMe__sibGI\",\"aboutMeForm\":\"ProfileInfo_aboutMeForm__+mEWe\",\"skills\":\"ProfileInfo_skills__UsXLc\",\"skillsForm\":\"ProfileInfo_skillsForm__C80QM\",\"contacts\":\"ProfileInfo_contacts__jJtkI\",\"contactsForm\":\"ProfileInfo_contactsForm__wrOPV\",\"tooltip\":\"ProfileInfo_tooltip__qL2Q-\",\"form_input\":\"ProfileInfo_form_input__wNofn\",\"form_textarea\":\"ProfileInfo_form_textarea__hWAoQ\",\"facebook\":\"ProfileInfo_facebook__8CAjM\",\"website\":\"ProfileInfo_website__OVHJW\",\"vk\":\"ProfileInfo_vk__q0vN5\",\"twitter\":\"ProfileInfo_twitter__BjQSe\",\"instagram\":\"ProfileInfo_instagram__MWgNi\",\"youtube\":\"ProfileInfo_youtube__kkbug\",\"github\":\"ProfileInfo_github__CkNij\",\"mainLink\":\"ProfileInfo_mainLink__zIKWW\",\"button\":\"ProfileInfo_button__mARou\",\"error\":\"ProfileInfo_error__3fng1\"};","import React, { useState, useEffect } from 'react'\r\nimport s from './ProfileInfo.module.css'\r\n\r\nconst ProfileStatus = (props) => {\r\n  let [editMode, setEditMode] = useState(false)\r\n  let [status, setStatus] = useState(props.status)\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status)\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n    <div className={s.status}>\r\n      {!editMode &&\r\n        <span onDoubleClick={activateEditMode}>{props.status || \"-------\"}\r\n          <span className={s.tooltip}>double click to edit</span>\r\n        </span>\r\n      }\r\n      {editMode &&\r\n        <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default ProfileStatus","import React from 'react'\r\nimport s from './ProfileInfo.module.css'\r\nimport { useForm } from 'react-hook-form'\r\n\r\n\r\nconst ProfileDataForm = ({ onSubmit, profile }) => {\r\n  const preloadValues = {\r\n    fullName: profile.fullName,\r\n    lookingForAJob: profile.lookingForAJob,\r\n    lookingForAJobDescription: profile.lookingForAJobDescription,\r\n    aboutMe: profile.aboutMe,\r\n    contacts: profile.contacts\r\n  }\r\n\r\n  const { register, handleSubmit, formState: { errors } } = useForm({\r\n    defaultValues: preloadValues\r\n  })\r\n\r\n  return <form onSubmit={handleSubmit(onSubmit)}>\r\n    <div className={s.fullNameForm}>\r\n      <b>Full name:</b>\r\n      <input {...register('fullName', { required: true })} placeholder='Full name' className={s.form_input} />\r\n      {errors.fullName && <div className={s.error}>This field is required</div>}\r\n    </div>\r\n    <div className={s.lookingForAJobForm}>\r\n      <label><input {...register('lookingForAJob')} type='checkbox' />looking for a job</label>\r\n    </div>\r\n    <div className={s.skillsForm}>\r\n      <b>My professional skills:</b>\r\n      <textarea {...register('lookingForAJobDescription')} placeholder='My skills' className={s.form_textarea} />\r\n    </div>\r\n    <div className={s.aboutMeForm}>\r\n      <b>About me:</b>\r\n      <textarea {...register('aboutMe')} placeholder='About me description' className={s.form_textarea} />\r\n    </div>\r\n    <div className={s.contactsForm}>\r\n      <b>Contacts</b>:\r\n      <table>\r\n        <tbody>\r\n          {Object.keys(profile.contacts).map(key => {\r\n            return <tr key={key}>\r\n              <td>{key}:</td><td><input {...register('contacts.' + key)} placeholder={key} className={s.form_input} /></td>\r\n            </tr>\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <div className={s.button} type='submit'><button>Save</button></div>\r\n  </form>\r\n}\r\n\r\nexport default ProfileDataForm","import React, { useState } from 'react'\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport ProfileStatus from './ProfileStatus'\r\nimport userPhoto from '../../../assets/images/user.png'\r\nimport ProfileDataForm from './ProfileDataForm'\r\n\r\n\r\nconst ProfileInfo = ({ profile, status, updateUserStatus, isOwner, savePhoto, saveProfile }) => {\r\n  let [editMode, setEditMode] = useState(false)\r\n\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0])\r\n    }\r\n  }\r\n \r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData).then(\r\n      () => {\r\n        setEditMode(false)\r\n      }\r\n    )\r\n  }\r\n \r\n  return (\r\n    <div className={s.description}>\r\n      <div className={s.imageArea}>\r\n        <img src={profile.photos.large || userPhoto} className={s.mainPhoto} alt=\"profile avatar\" />\r\n        { isOwner && editMode && <label className={s.upload_image}>\r\n            <input type={\"file\"} onChange={onMainPhotoSelected} />\r\n            Upload\r\n          </label>\r\n        }\r\n      </div>\r\n      <div className={s.profileDataArea}>\r\n        {\r\n          (editMode)\r\n            ? <ProfileDataForm \r\n                profile={profile} \r\n                onSubmit={onSubmit}\r\n              />\r\n            : <ProfileData\r\n                goToEditMode={() => { setEditMode(true) }}\r\n                profile={profile}\r\n                isOwner={isOwner}\r\n                status={status}\r\n                updateStatus={updateUserStatus}\r\n              />\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode, status, updateStatus }) => {\r\n  return <div className={s.profileData}>\r\n    <div className={s.fullName}>\r\n      {profile.fullName}\r\n    </div>\r\n    <ProfileStatus status={status} updateStatus={updateStatus} />\r\n    <div className={s.lookingForAJob}>\r\n      <b>Looking for a job</b>: {profile.lookingForAJob\r\n        ? <span className={s.yes}>yes</span>\r\n        : <span className={s.no}>no</span>}\r\n    </div>\r\n    <div className={s.aboutMe}>\r\n      <b>About me</b>: {profile.aboutMe}\r\n    </div>\r\n    <div className={s.skills}>\r\n      <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n    </div>\r\n    <div className={s.contacts}>\r\n      {Object.keys(profile.contacts).map( key => {\r\n        if (profile.contacts[key]) {\r\n          return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n        }\r\n        return null\r\n      })}\r\n    </div>\r\n    {isOwner && <div className={s.button}><button onClick={goToEditMode}>Edit profile</button></div>}\r\n  </div>\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <a href={contactValue}>\r\n      <span className={s[contactTitle]}></span>\r\n    </a>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo","// extracted by mini-css-extract-plugin\nexport default {\"posts_area\":\"MyPosts_posts_area__NggvR\",\"posts\":\"MyPosts_posts__7++Dn\",\"addPost_textarea\":\"MyPosts_addPost_textarea__dTpKR\",\"addPostButton\":\"MyPosts_addPostButton__stgh6\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__AOu86\",\"message\":\"Post_message__mGvk5\"};","import React from 'react'\r\nimport s from './Post.module.css'\r\nimport heart from '../../../../assets/images/heart.png'\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src={props.profilePhoto} alt='profile' />\r\n      <div className={s.message}>\r\n        <div>{props.message}</div>\r\n        <div>\r\n          <img src={heart} alt='like' />\r\n          <span>{props.likesCount}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport defaultUser from '../../../assets/images/user.png'\r\nimport { useForm } from 'react-hook-form'\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  \r\n  let profilePhoto\r\n\r\n  (props.profile === null) ? profilePhoto = defaultUser : profilePhoto = props.profile.photos.large\r\n  \r\n  let postsElements = props.posts.sort((a, b) => a.id - b.id).reverse().map(el => <Post \r\n    message={el.message} \r\n    likesCount={el.likesCount} \r\n    profilePhoto={profilePhoto}\r\n    key={el.id} \r\n  />)\r\n  \r\n  const AddPostForm = () => {\r\n    const {register, handleSubmit} = useForm()\r\n    const onSubmit = (data) => {\r\n      props.addPost(data.addPost)\r\n    }\r\n  \r\n    return <form onSubmit={handleSubmit(onSubmit)}>\r\n      <textarea {...register('addPost')} placeholder={'Post message'} className={s.addPost_textarea} />\r\n      <div className={s.addPostButton}><button type={'submit'}>Add post</button></div>\r\n    </form>\r\n  }\r\n\r\n  return (\r\n    <div className={s.posts_area}>\r\n      <div>\r\n        <AddPostForm />\r\n        <div className={s.posts}>\r\n          {postsElements}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default MyPosts","import { addPost } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    profile: state.profilePage.profile\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost} )(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={s.content}>\r\n      <ProfileInfo \r\n        isOwner={props.isOwner} \r\n        profile={props.profile} \r\n        status={props.status} \r\n        updateUserStatus={props.updateUserStatus} \r\n        savePhoto={props.savePhoto}\r\n        saveProfile={props.saveProfile}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile } from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;               //match появился в props благодаря withRouter'y\r\n    if (!userId) {\r\n      userId = this.props.autorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push('/login');\r\n      }\r\n    }\r\n\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile()\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userid) {\r\n      this.refreshProfile()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile \r\n        {...this.props} \r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        savePhoto={this.props.savePhoto}\r\n        saveProfile={this.props.saveProfile}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => { \r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile}))(ProfileContainer)"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","onSubmit","profile","preloadValues","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contacts","useForm","defaultValues","register","handleSubmit","errors","formState","required","placeholder","type","Object","keys","map","key","ProfileData","isOwner","goToEditMode","Contact","contactTitle","contactValue","onClick","href","updateUserStatus","savePhoto","saveProfile","Preloader","src","photos","large","userPhoto","alt","target","files","length","formData","then","profilePhoto","message","heart","likesCount","React","defaultUser","postsElements","posts","sort","a","b","id","reverse","el","AddPostForm","data","addPost","connect","state","profilePage","MyPosts","ProfileContainer","userId","this","match","params","autorizedUserId","history","push","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","userid","compose","withRouter","auth","isAuth"],"sourceRoot":""}