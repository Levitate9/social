{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","el","key","messagesElements","messages","isAuth","Textarea","ElementConstructor","maxLength15","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","validate","required","dialogs_items","values","addMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,SAAW,4B,6JCchGC,EAXI,SAACC,GAElB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACE,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QACjC,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,Q,kBCDjBC,EANC,SAACT,GACf,OACE,yBAAKG,UAAWC,IAAEM,SAAUV,EAAMU,U,yCCmDvBC,EA9CC,SAACX,GAEf,IAAIY,EAAQZ,EAAMa,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAE,OAAI,kBAAC,EAAD,CAAYf,GAAIe,EAAGf,GAAIM,KAAMS,EAAGT,KAAMU,IAAKD,EAAGf,QACxFiB,EAAmBP,EAAMQ,SAASJ,KAAI,SAAAC,GAAE,OAAI,kBAAC,EAAD,CAASP,QAASO,EAAGP,QAASQ,IAAKD,EAAGf,QAMtF,IAAKF,EAAMqB,OAAQ,OAAO,kBAAC,IAAD,CAAUd,GAAI,WAExC,IAAMe,EAAWC,YAAmB,YAC9BC,EAAcC,YAAiB,IAiB/BC,EAAsBC,YAAU,CAAEC,KAAM,kBAAlBD,EAfL,SAAC3B,GACtB,OACE,0BAAM6B,SAAU7B,EAAM8B,cACpB,6BACE,kBAACC,EAAA,EAAD,CAAOC,UAAWV,EAChBd,KAAM,iBACNyB,YAAa,qBACbC,SAAW,CAACC,IAAUX,MAG1B,6BAAK,oDAOX,OACE,yBAAKrB,UAAWC,IAAEW,SAChB,yBAAKZ,UAAWC,IAAEgC,eACftB,GAEH,yBAAKX,UAAWC,IAAEgB,UAChB,6BAAMD,GACN,kBAACO,EAAD,CAAqBG,SAjCP,SAACQ,GACnBrC,EAAMsC,WAAWD,EAAOE,sB,wCCdxBC,EAA6B,SAAC5B,GAChC,MAAO,CACLS,OAAQT,EAAM6B,KAAKpB,S,OCMRqB,sBACbC,aAPoB,SAAC/B,GACrB,MAAO,CACLC,YAAaD,EAAMC,eAKI,CAAEyB,kBDHG,SAACM,GAAe,IAExCC,EAFuC,4JAG3C,WACE,OAAKC,KAAK9C,MAAMqB,OAET,kBAACuB,EAAcE,KAAK9C,OAFI,kBAAC,IAAD,CAAUO,GAAI,eAJJ,GAEbwC,IAAMH,WAUtC,OAFgCD,YAAQH,EAARG,CAAoCE,KCRvDH,CAGZ/B","file":"static/js/5.2b1fbe3f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2YtO7\",\"dialogs_items\":\"Dialogs_dialogs_items__1k-0H\",\"messages\":\"Dialogs_messages__2Em8u\"};","import React from 'react';\r\nimport s from './DialogItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n\r\n  let path = '/dialogs/' + props.id\r\n\r\n  return (\r\n    <div className={s.dialog + ' ' + s.active}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={s.message}>{props.message}</div>\r\n  )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { ElementConstructor } from '../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map(el => <DialogItem id={el.id} name={el.name} key={el.id} />);\r\n  let messagesElements = state.messages.map(el => <Message message={el.message} key={el.id} />);\r\n\r\n  let addNewMessage = (values) => {\r\n    props.addMessage(values.newMessageBody)\r\n  }\r\n\r\n  if (!props.isAuth) return <Redirect to={'/login'} />\r\n\r\n  const Textarea = ElementConstructor('textarea')\r\n  const maxLength15 = maxLengthCreator(15);    //Textarea и maxLength15 обязательно создаются за пределами формы\r\n\r\n  const AddMessageForm = (props) => {\r\n    return (\r\n      <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n          <Field component={Textarea}\r\n            name={'newMessageBody'}\r\n            placeholder={'Enter your message'}\r\n            validate={ [required, maxLength15] }\r\n          />\r\n        </div>\r\n        <div><button>Add message</button></div>\r\n      </form>\r\n    )\r\n  }\r\n \r\n  const AddMessageReduxForm = reduxForm({ form: 'addMessageForm' })(AddMessageForm)\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogs_items}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n        <AddMessageReduxForm onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => { \r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n      \r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  let ConnectedWithAuthRedirect = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n  return ConnectedWithAuthRedirect;\r\n}","import { addMessage } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { addMessage }),\r\n  withAuthRedirect)\r\n  (Dialogs)"],"sourceRoot":""}