{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","autoFocus","onBlur","updateUserStatus","onChange","e","currentTarget","onDoubleClick","ProfileInfo","profile","className","s","description","src","photos","large","aboutMe","lookingForAJobDescription","Preloader","Post","item","message","likesCount","Textarea","ElementConstructor","maxLength10","maxLengthCreator","AddPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","name","placeholder","validate","required","MyPosts","React","memo","console","log","postsElements","posts","map","el","key","id","posts_area","values","addPost","MyPostsContainer","connect","state","profilePage","Profile","content","ProfileContainer","userId","this","match","params","autorizedUserId","history","getUserProfile","getUserStatus","Component","compose","withRouter","auth","isAuth"],"mappings":"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","file":"static/js/3.cb9937ea.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_img\":\"ProfileInfo_profile_img__1urry\",\"description\":\"ProfileInfo_description__3x4TA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts_area\":\"MyPosts_posts_area__i9yeR\",\"posts\":\"MyPosts_posts__3IIjN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3rhjU\"};","import React, { useEffect, useState } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false)\r\n  let [status, setStatus] = useState(props.status)\r\n\r\n  let activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  let deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateUserStatus(status)\r\n  }\r\n\r\n  let onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n\r\n  //Хук useEffect срабатывает после отрисовки компонента, в котором он использован.\r\n  //Хук сработает по сценарию, описанному в функции.\r\n  //Если если в useEffect передать только ф-цию, то он будет вызываться\r\n  //каждый раз после перерисовки компонента.\r\n  //А если установить зависимость от props.status через массив, то хук будет вызываться\r\n  //после перерисовки компонента только если изменился props.status.\r\n  useEffect( () => {\r\n    setStatus(props.status)\r\n  }, [props.status])\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        (!editMode)\r\n          ? <div>\r\n            <span onDoubleClick={activateEditMode}>{props.status || 'status'}</span>\r\n          </div>\r\n          : <div>\r\n            <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status} />\r\n          </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* <div>\r\n        <img className={s.profile_img} src='https://images.unsplash.com/photo-1509225770129-fbcf8a696c0b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9' />\r\n      </div> */}\r\n      <div className={s.description}>\r\n        <img src={props.profile.photos.large} />\r\n        <div>{props.profile.aboutMe}</div>\r\n        <div>{props.profile.lookingForAJobDescription}</div>\r\n      </div>\r\n      <div>\r\n        <ProfileStatusWithHooks status={props.status} updateUserStatus={props.updateUserStatus} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://avatars.mds.yandex.net/get-ott/374297/2a000001616b87458162c9216ccd5144e94d/orig' />\r\n        <div>\r\n          <span>{props.message}</span>\r\n          <div>like: {props.likesCount}</div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { ElementConstructor } from '../../common/FormsControls/FormsControls';\r\n\r\nconst Textarea = ElementConstructor('textarea')\r\nconst maxLength10 = maxLengthCreator(10)         //Textarea и maxLength15 обязательно создаются за пределами формы\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name={'addPost'} placeholder={'Post message'}\r\n          validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({ form: 'addPostForm' })(AddPostForm)\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  console.log(\"render yo\")\r\n  let postsElements = props.posts.map(el => <Post message={el.message} likesCount={el.likesCount} key={el.id} />)\r\n\r\n  let addNewPost = (values) => {\r\n    props.addPost(values.addPost);\r\n  }\r\n\r\n  return (\r\n    <div className={s.posts_area}>\r\n      <h3>My Posts</h3>\r\n      <div>\r\n        <AddPostReduxForm onSubmit={addNewPost} />\r\n        <div className={s.posts}>\r\n          {postsElements}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default MyPosts;","import { addPost } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost} )(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={s.content}>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateUserStatus={props.updateUserStatus} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getUserStatus, updateUserStatus } from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.autorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push('/login');\r\n      }\r\n    }\r\n\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile {...this.props} />\r\n    )\r\n  }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => { \r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus}))(ProfileContainer)"],"sourceRoot":""}