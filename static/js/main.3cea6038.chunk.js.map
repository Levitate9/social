{"version":3,"sources":["components/Navbar/Navbar.module.css","redux/dialogs-reducer.js","redux/users-reducer.js","assets/images/preloader.gif","api/api.js","serviceWorker.js","components/Friends/NavbarFriends/NavbarFriends.jsx","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Friends/Friends.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","App.js","index.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/Friends/NavbarFriends/NavbarFriends.module.css","components/Header/Header.module.css","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControls.js","redux/profile-reducer.js"],"names":["module","exports","initialState","dialogs","id","name","messages","message","addMessage","text","type","dialogsReducer","state","action","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","userId","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","getUsers","dispatch","a","usersAPI","data","items","totalCount","follow","resultCode","unfollow","usersReducer","map","u","followed","filter","instance","axios","withCredentials","baseURL","headers","get","then","response","post","delete","authAPI","me","login","email","password","rememberMe","logout","profileAPI","getProfile","getStatus","updateStatus","status","put","Boolean","window","location","hostname","match","NavbarFriends","props","friendsList","friends","el","className","s","friend","key","friends_area","Navbar","nav","item","to","activeClassName","active","News","Music","Settings","Friends","Header","header","main_logo","src","login_block","isAuth","onClick","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","this","React","Component","connect","auth","Input","ElementConstructor","maxLength20","maxLengthCreator","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","validate","required","error","formSummaryError","length","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","usersPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ProfileContainer","lazy","DialogsContainer","UsersContainer","App","initializeApp","getState","fallback","Preloader","path","render","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","StrictMode","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","value","maxLength","preloader","HtmlTag","input","meta","hasError","touched","formControl","posts","likesCount","profile","addPost","setUserStatus","getUserProfile","getUserStatus","updateUserStatus","p","postId"],"mappings":"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","file":"static/js/main.3cea6038.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1OkcW\",\"item\":\"Navbar_item__3582K\",\"active\":\"Navbar_active__3i_Xx\"};","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n  dialogs: [\r\n    { id: 1, name: 'Dimych' },\r\n    { id: 2, name: 'Anrew' },\r\n    { id: 3, name: 'Sveta' },\r\n    { id: 4, name: 'Sasha' },\r\n    { id: 5, name: 'Viktor' },\r\n    { id: 6, name: 'Valera' }\r\n  ],\r\n\r\n  messages: [\r\n    { id: 1, message: 'Hi' },\r\n    { id: 2, message: 'How are you?' },\r\n    { id: 3, message: 'I`m good' },\r\n    { id: 4, message: 'Let`s play some game' },\r\n    { id: 5, message: 'What are you looking for?' },\r\n    { id: 6, message: 'Newermind' }\r\n  ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case ADD_MESSAGE: \r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, {id: 7, message: action.text}]\r\n      }\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const addMessage = (text) => ({ type: ADD_MESSAGE, text });\r\n\r\nexport default dialogsReducer;","import { usersAPI } from '../api/api';\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case FOLLOW: \r\n      return {\r\n        ...state,\r\n        users: state.users.map(u => {\r\n          if (u.id === action.userId) {\r\n            return { ...u, followed: true }\r\n          }\r\n          return u\r\n        })\r\n      }\r\n\r\n    case UNFOLLOW: \r\n      return {\r\n        ...state,\r\n        users: state.users.map(u => {\r\n          if (u.id === action.userId) {\r\n            return { ...u, followed: false }\r\n          }\r\n          return u\r\n        })\r\n      }\r\n\r\n    case SET_USERS:\r\n      return { ...state, users: action.users }                                               \r\n    \r\n    case SET_CURRENT_PAGE:\r\n      return { ...state, currentPage: action.currentPage }\r\n\r\n    case SET_TOTAL_USERS_COUNT:\r\n      return { ...state, totalUsersCount: action.totalUsersCount }  \r\n\r\n    case TOGGLE_IS_FETCHING:\r\n      return { ...state, isFetching: action.isFetching } \r\n\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n      return { \r\n        ...state, \r\n        followingInProgress: action.isFetching \r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter(id => id !== action.userId)\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n//экшен-криэйтеры\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId })\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, totalUsersCount })\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\n//санк-криэйтеры\r\nexport const getUsers = (currentPage, pageSize) => async (dispatch) => {\r\n  dispatch(setCurrentPage(currentPage))\r\n  dispatch(toggleIsFetching(true))\r\n\r\n  let data = await usersAPI.getUsers(currentPage, pageSize)\r\n  dispatch(toggleIsFetching(false))\r\n  dispatch(setUsers(data.items))\r\n  dispatch(setTotalUsersCount(data.totalCount))\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n  dispatch(toggleFollowingProgress(true, userId))\r\n\r\n  let data = await usersAPI.follow(userId)\r\n  if (data.resultCode === 0) {\r\n    dispatch(followSuccess(userId))\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n  }\r\n}\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n  dispatch(toggleFollowingProgress(true, userId))\r\n\r\n  let data = await usersAPI.unfollow(userId)\r\n  if (data.resultCode === 0) {\r\n    dispatch(unfollowSuccess(userId))\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n  }\r\n}\r\n\r\nexport default usersReducer;","module.exports = __webpack_public_path__ + \"static/media/preloader.28d59907.gif\";","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n  headers: {\r\n    'API-KEY' : '3e43cc29-0135-406d-9ee4-44e9f8d7f5b1'\r\n  }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n  getUsers(currentPage = 1, pageSize = 10) {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n    .then(response => {\r\n      return response.data;\r\n    });\r\n  },\r\n\r\n  follow(userId) {\r\n    return instance.post(`follow/${userId}`)\r\n    .then(response => {\r\n      return response.data;\r\n    });\r\n  },\r\n\r\n  unfollow(userId) {\r\n    return instance.delete(`follow/${userId}`)\r\n    .then(response => {\r\n      return response.data;\r\n    });\r\n  }\r\n}\r\n\r\nexport const authAPI = {\r\n\r\n  me() {\r\n    return instance.get('auth/me') \r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    \r\n  },\r\n\r\n  login(email, password, rememberMe = false) {\r\n    return instance.post('auth/login', {email, password, rememberMe})\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n  },\r\n\r\n  logout() {\r\n    return instance.delete('auth/login')\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n  }\r\n}\r\n\r\nexport const profileAPI = {\r\n\r\n  getProfile(userId) {\r\n    return instance.get('profile/' + userId)\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n  },\r\n\r\n  getStatus(userId) {\r\n    return instance.get('profile/status/' + userId)\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n  },\r\n\r\n  updateStatus(status) {\r\n    return instance.put('profile/status/', {status})\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n  }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from './NavbarFriends.module.css';\r\n\r\nconst NavbarFriends = (props) => {\r\n\r\n  let friendsList = props.friends.map( el => \r\n    <div className={s.friend} key={el.id}>\r\n      <p className={s.name}>{el.name}</p>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div className={s.friends_area}>\r\n      {friendsList}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavbarFriends;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport NavbarFriends from '../Friends/NavbarFriends/NavbarFriends';\r\n\r\nconst Navbar = (props) => {\r\n\r\n  return (\r\n    <nav className={s.nav}>\r\n      <div className={s.item}>\r\n        <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to='/dialogs' activeClassName={s.active}>Messages</NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to='/users' activeClassName={s.active}>Users</NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to='/news' activeClassName={s.active}>News</NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to='/music' activeClassName={s.active}>Music</NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to='/settings' activeClassName={s.active}>Settings</NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to='/friends' activeClassName={s.active}>Friends</NavLink>\r\n        <NavbarFriends friends={props.state.friends} />\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nconst News = (props) => {\r\n  return (\r\n    <div>\r\n      News\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default News;","import React from 'react';\r\n\r\nconst Music = (props) => {\r\n  return (\r\n    <div>\r\n      Music\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Music;","import React from 'react';\r\n\r\nconst Settings = (props) => {\r\n  return (\r\n    <div>\r\n      Settings\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Settings;","import React from 'react';\r\nimport s from './Friends.module.css';\r\n\r\nconst Friends = (props) => {\r\n  return (\r\n    <div>Friends</div>\r\n  )\r\n};\r\n\r\nexport default Friends;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={s.header}>\r\n      <img className={s.main_logo} src='https://www.pngkit.com/png/full/969-9692405_jordan-logo-gray-amtrak-white-logo.png' />\r\n      <div className={s.login_block}>\r\n        {\r\n          props.isAuth\r\n            ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n            : <NavLink to={'/login'}>Login</NavLink>\r\n        }\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import { authAPI } from \"../api/api\"\r\nimport { stopSubmit } from 'redux-form'\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\n\r\nlet initialState = {\r\n  id: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case SET_USER_DATA: \r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n//экшен-криэйтеры\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({ \r\n  type: SET_USER_DATA, payload: {id, email, login, isAuth} \r\n})\r\n\r\n//санк-криэйтеры\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n  let response = await authAPI.me()\r\n\r\n  if (response.resultCode === 0) {\r\n    let { id, email, login } = response.data\r\n    dispatch(setAuthUserData(id, email, login, true))\r\n  }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n  let response = await authAPI.login(email, password, rememberMe)\r\n\r\n  if (response.resultCode === 0) {\r\n    dispatch(getAuthUserData())\r\n  } else {\r\n    let message = response.messages.length > 0 ? response.messages[0] : 'Some error'\r\n    dispatch(stopSubmit('login', { _error: message }))\r\n  }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  let response = await authAPI.logout()\r\n\r\n  if (response.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false))\r\n  }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/auth-reducer';\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n  render() {\r\n    return <Header {...this.props} />\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { ElementConstructor} from '../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport s from '../common/FormsControls/FormsControls.module.css'\r\n\r\nconst Input = ElementConstructor('input')\r\nconst maxLength20 = maxLengthCreator(20)\r\n\r\nconst LoginForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field placeholder={'Email'} component={Input} name={'email'} \r\n          validate={[ required, maxLength20 ]} />\r\n      </div>\r\n      <div>\r\n        <Field placeholder={'Password'} component={Input} name={'password'} type={'password'}\r\n          validate={[ required, maxLength20 ]} />\r\n      </div>\r\n      <div>\r\n        <Field type={'checkbox'} component={Input} name={'remember me'} />Remember me\r\n      </div>\r\n      { props.error && <span className={s.formSummaryError}>\r\n          {props.error}\r\n        </span>\r\n      }   \r\n      <div>\r\n        <button>Log In</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n\r\n  const onSubmit = (formData) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe);\r\n  }\r\n\r\n  if (props.isAuth) {\r\n    return <Redirect to={'/profile'} />\r\n  }\r\n  //если isAuth true то выполняется редирект на профиль, \r\n  //если folse то выполнение идёт дальше и показывает форму входа\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import { getAuthUserData } from './auth-reducer';\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\n\r\nlet initialState = {\r\n  initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS: \r\n      return {\r\n        ...state,\r\n        initialized: true\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//экшен-криэйтеры\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\r\n\r\n//санк-криэйтеры\r\nexport const initializeApp = () => (dispatch) => { \r\n  let promise = dispatch(getAuthUserData()); \r\n  Promise.all([promise]) \r\n    .then( () => {\r\n      dispatch(initializedSuccess());    \r\n    });\r\n};\r\n\r\nexport default appReducer;","let initialState = {\r\n  friends: [\r\n    {id: 1, name: 'Andrew'},\r\n    {id: 2, name: 'Sasha'},\r\n    {id: 3, name: 'Sveta'}\r\n  ]\r\n};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n\r\n  return state;\r\n}\r\n\r\nexport default sidebarReducer;","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport sidebarReducer from './sidebar-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from './app-reducer';\r\n\r\nlet reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  usersPage: usersReducer,\r\n  sidebar: sidebarReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer\r\n});\r\n\r\n//подключаем расширение для браузера Redux DevTools к стору\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\n//старый стор, без поддержки Redux DevTools\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;       //это позволит нам обращаться к store из консоли\r\n\r\nexport default store;","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport { BrowserRouter, Route, withRouter } from 'react-router-dom';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport Friends from './components/Friends/Friends';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login';\nimport { connect, Provider } from 'react-redux';\nimport { initializeApp } from './redux/app-reducer';\nimport Preloader from './components/common/Preloader/Preloader';\nimport { compose } from 'redux';\nimport store from './redux/redux-store';\nimport { Suspense } from 'react';\n//import ProfileContainer from './components/Profile/ProfileContainer';\n//import DialogsContainer from './components/Dialogs/DialogsContainer';\n//import UsersContainer from './components/Users/UsersContainer';\nconst ProfileContainer = React.lazy( () => import('./components/Profile/ProfileContainer'))\nconst DialogsContainer = React.lazy( () => import('./components/Dialogs/DialogsContainer'))\nconst UsersContainer = React.lazy( () => import('./components/Users/UsersContainer'))\n\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n\n  render() {\n    let state = this.props.store.getState();\n    \n    if (!this.props.initialized) {\n      return <Preloader/>\n    }\n\n    return (\n      <div className='app-wrapper'>\n        <HeaderContainer />\n        <Navbar state={state.sidebar} />\n        <div className='app-wrapper-content'>\n          <Suspense fallback={<Preloader />}>\n            <Route path='/profile/:userId?' render={() => <ProfileContainer />} />\n            <Route path='/dialogs' render={() => <DialogsContainer />} />\n            <Route path='/users' render={() => <UsersContainer />} />\n            <Route path='/news' component={News} />\n            <Route path='/music' component={Music} />\n            <Route path='/settings' component={Settings} />\n            <Route path='/friends' component={Friends} />\n            <Route path='/login' render={() => <Login />} />\n          </Suspense>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    initialized: state.app.initialized\n  }\n}\n\nlet AppContainer = compose(withRouter, connect(mapStateToProps, {initializeApp}))(App);\n\nconst SamuraiJSApp = (props) => {\n  return (\n    <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store} >\n        <AppContainer store={store}/>\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>\n  )\n}\n\nexport default SamuraiJSApp;","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSApp from './App';\n\nReactDOM.render(\n <SamuraiJSApp />, document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__26X3e\",\"error\":\"FormsControls_error__3kJmf\",\"formSummaryError\":\"FormsControls_formSummaryError__1JNw9\"};","\r\nexport const required = (value) => {\r\n  if (value) return undefined\r\n\r\n  return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) return `Max lenght is ${maxLength} symbols`\r\n\r\n  return undefined\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"NavbarFriends_friend__2rPRR\",\"name\":\"NavbarFriends_name__2cePn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1J2Jb\",\"main_logo\":\"Header_main_logo__wRx2t\",\"login_block\":\"Header_login_block__2ADwg\"};","import React from 'react';\r\nimport preloader from '../../../assets/images/preloader.gif';\r\n\r\nlet Preloader = (props) => {\r\n  return (\r\n    <div>\r\n      <img src={preloader} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Preloader;","import React from 'react'\r\nimport s from './FormsControls.module.css'\r\n\r\n//отдельно берём из пропсов input и meta, всё остальное оставляем в props - 77 видео, 25:30 - деструктуризация пропсов\r\nexport const ElementConstructor = (HtmlTag) => ({ input, meta, ...props }) => {\r\n\r\n  const hasError = meta.touched && meta.error\r\n\r\n  return (\r\n    <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n      <div>\r\n        <HtmlTag {...input} {...props} />\r\n      </div>\r\n      { hasError && <span>{meta.error}</span> } \r\n    </div>\r\n  )\r\n}","import { profileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'SET_USER_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n  posts: [\r\n    { id: 1, message: 'Hi, how are you?', likesCount: 15 },\r\n    { id: 2, message: 'It`s my first post', likesCount: 20 }\r\n  ],\r\n  profile: null,\r\n  status: null\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, { id: 5, message: action.text, likesCount: 0 }],\r\n      }\r\n    }\r\n\r\n    case SET_USER_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.profile\r\n      }\r\n\r\n    case SET_USER_STATUS:\r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      }\r\n\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(p => p.id !== action.postId)\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const addPost = (text) => ({ type: ADD_POST, text });\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\r\nexport const setUserStatus = (status) => ({ type: SET_USER_STATUS, status })\r\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId })\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n  let response = await profileAPI.getProfile(userId)\r\n  dispatch(setUserProfile(response))\r\n}\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n  let response = await profileAPI.getStatus(userId)\r\n  dispatch(setUserStatus(response))\r\n}\r\n\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n  let response = await profileAPI.updateStatus(status)\r\n  if (response.resultCode === 0) {\r\n    dispatch(setUserStatus(status))\r\n  }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}